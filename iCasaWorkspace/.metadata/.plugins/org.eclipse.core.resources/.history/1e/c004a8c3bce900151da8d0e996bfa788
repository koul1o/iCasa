package org.example.follow.me.manager;

import com.example.bimary.follow.me.FollowMeConfiguration;

public class FollowMeManagerImpl implements FollowMeAdministration {

	/** Field for followMeConfiguration dependency */

	/** Injected field for the component property ilumGoal */

	/** Field for config dependency */
	// private FollowMeConfiguration config;
	IlluminanceGoal illuminanceGoal;
	EnergyGoal energyGoal;
	/** Field for config dependency */
	private FollowMeConfiguration config;

	/** Component Lifecycle Method */
	public void stop() {
		System.out.println("Manager stoped");
	}

	/** Component Lifecycle Method */
	public void start() {
		System.out.println("Manager started");

	}

	@Override
	public void setIlluminancePreference(IlluminanceGoal illuminanceGoal) {

		this.illuminanceGoal = illuminanceGoal;
		config.setMaximumNumberOfLightsToTurnOn(illuminanceGoal.getNumberOfLightsToTurnOn());
		config.setOnlyDim(illuminanceGoal.isOnlyBin());
		config.setPersentage(illuminanceGoal.getPersentage());
		System.out.println("Max Lights set to: " + config.getMaximumNumberOfLightsToTurnOn());
		System.out.println("Only dim is : " + config.isOnlyDim());
		System.out.println("Presentage is : " + config.getPersentage());
	}

	@Override
	public IlluminanceGoal getIlluminancePreference() {
		return illuminanceGoal;
	}

	@Override
	public void setEnergyGoal(EnergyGoal energyGoal) {
		this.energyGoal = energyGoal;
		config.setMaximumAllowedEnergyInRoom(energyGoal.getMaximumEnergyInRoom());
		System.out.println("Max Allowed Energy : " + config.getMaximumAllowedEnergyInRoom());
	}

	@Override
	public EnergyGoal getEnergyGoal() {
		return energyGoal;
	}

}
